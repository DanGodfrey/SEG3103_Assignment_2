package vcr.test;

import static org.junit.Assert.*;

import org.junit.Test;

import vcr.state.*;
import vcr.util.*;



public class VCRTest {
	
	@Test
	//1.1
	public void ConsoleConstructor()
	{
		VCRManager vcrMngr = new VCRManager();
		assertTrue(vcrMngr.getState() instanceof Off);
	}
	
	@Test
	//1.2
	public void PowerOnNoTape()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		assertTrue(vcrMngr.getState() instanceof Empty);
	}
	
	@Test
	//1.3
	public void InjectWhenEmpty()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		assertTrue(vcrMngr.getState() instanceof Idle);
	}
	
	@Test
	//1.4
	public void PlayWhileIdle()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		assertTrue(vcrMngr.getState() instanceof Play);
	}
	
	@Test
	//1.4
	public void PlayWhilePlay()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		assertTrue(vcrMngr.getState() instanceof Play);
	}
	
}
