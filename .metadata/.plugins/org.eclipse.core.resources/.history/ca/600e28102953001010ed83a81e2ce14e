package vcr.test;

import static org.junit.Assert.*;

import org.junit.Test;

import vcr.state.*;
import vcr.util.*;



public class VCRTest {
	
	@Test
	//1.1
	public void ConsoleConstructor()
	{
		VCRManager vcrMngr = new VCRManager();
		assertTrue(vcrMngr.getState() instanceof Off);
	}
	
	@Test
	//1.2
	public void PowerOnNoTape()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		assertTrue(vcrMngr.getState() instanceof Empty);
	}
	
	@Test
	//1.3
	public void InjectWhenEmpty()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		assertTrue(vcrMngr.getState() instanceof Idle);
	}
	
	@Test
	//1.4
	public void PlayWhileIdle()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		assertTrue(vcrMngr.getState() instanceof Play);
	}
	
	@Test
	//1.5
	public void PlayWhilePlay()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		assertTrue(vcrMngr.getState() instanceof Play);
	}
	
	//2.5
	public void StopWhilePlay()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		vcrMngr.processEvent(new VCREvent(VCREvent.STOP));
		assertTrue(vcrMngr.getState() instanceof Idle);
	}
	
	//3.5
	public void RewindWhilePlay()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		vcrMngr.processEvent(new VCREvent(VCREvent.REWIND));
		assertTrue(vcrMngr.getState() instanceof Rewind);
	}
	
	//4.5
	public void FwdWhilePlay()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		vcrMngr.processEvent(new VCREvent(VCREvent.FWD));
		assertTrue(vcrMngr.getState() instanceof FWD);
	}
	
	//5.5
	public void CueWhilePlay()
	{
		VCRManager vcrMngr = new VCRManager();
		vcrMngr.processEvent(new VCREvent(VCREvent.POWER));
		vcrMngr.processEvent(new VCREvent(VCREvent.INJECT));
		vcrMngr.processEvent(new VCREvent(VCREvent.PLAY));
		vcrMngr.processEvent(new VCREvent(VCREvent.CUE));
		assertTrue(vcrMngr.getState() instanceof Cue);
	}
	
}
